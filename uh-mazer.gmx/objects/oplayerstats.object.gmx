<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>splayerstats</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialise stats
display_set_gui_size (view_wview[view_current], view_hview[view_current]);

///initialise globals

//rooms
global.spellswitch = noone;

///spells
global.spell = oicespell;
global.spellcost = 3;

//initialise variable
hp = 20;
maxhp = hp;

stamina = 10;
maxstamina = stamina;

mana = 10;
maxmana = mana;

expr = 0;
maxexpr = 3;

level = 1;

attack = 1;

coins = 0;
pscore = 0;
highscore = 0;

time = 0;
besttime = 0;


///spells
global.spell = ofireball;
global.spellcost = 3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control the stats
//Start the game
getinput();
var start = attack;

if gamepad_is_connected (0) {
    start = gamepad_button_check_pressed (0, gp_start);
}

if start == true &amp;&amp; room == rmenu {
    room_goto (rhome);
}

if hp &lt;= 0 {
    hp = 0;
    with oplayer{
        instance_destroy ();
    }
    game_restart ();

}

if spellpause {
   if room != rspells {
   global.spellswitch = room;
   room_persistent = true;
   room_goto (rspells);
   }else{
         room_goto (global.spellswitch);
   }
}


/*if mouse_check_button_pressed (mb_left){
    instance_create(mouse_x, mouse_y, opdamage)
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the Stats
switch (room) {
    case (rmenu):
        
    break;
    
    case (rspells):
    
    break;
    
    default:
        draw_set_font (fhuds);
        draw_set_halign (fa_left);
        draw_text_color (16, 32, "Health: " + string (hp) + "/" + string (maxhp), c_white, c_white, c_white, c_white, 1);
        draw_text_color (16, 32 + 16, "Mana: " + string (round (mana)) + "/" + string (maxmana), c_white, c_white, c_white, c_white, 1);
        draw_text_color (16, 64, "Stamina: " + string (stamina) + "/" + string (maxstamina), c_white, c_white, c_white, c_white, 1);
        draw_text_color (16, 64 + 16, "Level: " + string (level), c_white, c_white, c_white, c_white, 1);
        
        //add to the time
        time += 1
        // Draw the timer
        draw_set_halign (fa_center);
        draw_text_color(view_wview[view_current] / 2, view_hview[view_current] - 16, "Time: "+string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw invisible
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
